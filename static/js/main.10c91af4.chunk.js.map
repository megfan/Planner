{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedoutLinks.js","components/layout/Navbar.js","components/dashnoard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashnoard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SighUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","SignedoutLinks","Link","Notification","ProjectSummary","_ref","project","title","authFirstName","authLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashnoard_Notification","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","ownProps","match","params","data","content","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","autoComplete","htmlFor","onChange","React","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","user","set","CreateProject","createProject","history","push","authId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","path","component","exact","ProjectDetails","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","concat","fetch","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.10c91af4.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks  = (props) => {\n    \n    return(\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New project</NavLink></li>\n            <li><a onClick={props.signOut}>Log out</a></li>\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\n                {props.profile.initials}\n            </NavLink></li>\n            \n        </ul>\n    )\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS'})\n        }).catch((err) => {\n            dispatch({ type: \"LOGIN_ERROR\", err});\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS'})\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS'})\n        }).catch((err) => {\n            dispatch({ type: 'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks  = () => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>SignUp</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    )\n}\nexport default SignedOutLinks;","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from \"./SignedoutLinks\";\nimport { connect } from 'react-redux';\n\n\nconst Navbar  = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />;\n    return(\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo\"> Planner</Link>\n                { links }\n            </div>\n        </nav>       \n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\n\nconst Notification = () => {\n    return (\n        <div>\n            <p>Notofications</p>\n        </div>\n    )\n};\nexport default Notification;","import React from 'react';\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    return (\n          <div className=\"card z-depth-0 project-summary\">\n              <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                  <p>Posted by {project.authFirstName}{project.authLastName}</p>\n                  <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n              </div>\n          </div>\n    )\n};\nexport default ProjectSummary;\n","import React from 'react';\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n    return (\n        <div className=\" poject-list section\">\n          { projects && projects.map(project => {\n              return(\n                <Link to={'/project/' + project.id} key={project.id}>\n                  <ProjectSummary project={project} />\n                </Link>\n              )\n          })}\n        </div>\n    )\n};\nexport default ProjectList;\n","import React, { Component } from 'react';\nimport Notification from \"./Notification\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth } = this.props; //not necessarly\n\n    if(!auth.uid) return <Redirect to='/signin' />\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n            <div className=\"col s12 m6\">\n                <ProjectList projects={projects} />\n            </div>\n            <div className=\"col s12 m5 offset-m1\">\n                <Notification />\n            </div>\n        </div>       \n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ])\n)(Dashboard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props;\n    if(!auth.uid) return <Redirect to='/signin' />\n    \n    if(project) {\n        return (\n        <div className=\"container section project-details\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">{project.title}</span>\n                    <p>{project.content}</p>\n                </div>\n                <div className=\"card-action gret lighten-4 grey-text\">\n                    <div>Posted by {project.authFirstName} {project.authLastName}</div>\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                </div>\n            </div>\n        </div>\n        )\n    } else {\n  return (\n        <div className=\"container center\">\n            <p>Loading project...</p>\n        </div>                 \n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return{\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects'}\n    ])\n)(ProjectDetails);\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\n\nclass SignIn extends React.Component {\n    state = {\n        email: \"\",\n        password: \"\",\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n  render() {\n    const { authError, auth } = this.props;\n\n    if(auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className=\"container\">\n      <form onSubmit={this.handleSubmit} className=\"white\" autoComplete=\"off\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n              <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n              <div className=\"red-text center\">\n                { authError ? <p>{authError}</p> : null}\n              </div>\n          </div>\n      </form>\n        \n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n    return{\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { signUp } from '../../store/actions/authActions'\n\n\nclass SignUp extends React.Component {\n    state = {\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\"\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state)\n\n    }\n  render() {\n    const { auth, authError } = this.props;\n\n    if(auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className=\"container\">\n      <form onSubmit={this.handleSubmit} className=\"white\" autoComplete=\"off\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n              <label htmlFor=\"firstName\">First Name</label>\n              <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n              <label htmlFor=\"lastName\">Last Name</label>\n              <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n              <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n              <div className=\"red-text center\">\n                  { authError ? <p>{ authError }</p> : null }\n              </div>\n          </div>\n      </form>\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from \"../../store/actions/projectActions\";\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends React.Component {\n    state = {\n        title: \"\",\n        content: \"\",\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n  render() {\n    const { auth } = this.props;\n    if(!auth.uid) return <Redirect to='/signin' />\n\n    return (\n      <div className=\"container\">\n      <form onSubmit={this.handleSubmit} className=\"white\" autoComplete=\"off\">\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n          <div className=\"input-field\">\n              <label htmlFor=\"title\">Title</label>\n              <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n              <label htmlFor=\"content\">Project content</label>\n              <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n          </div>\n          <div className=\"input-field\">\n              <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n      </form>\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        //make async call to firebase\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authFirstName: profile.firstName,\n            authLastName: profile.lastName,\n            authId: authId,\n            createdAt: new Date()           \n        }).then(() => {\n            dispatch({ \n                type: 'CREATE_PROJECT',\n                project: project\n            });\n        }).catch((err) => {\n            dispatch({\n                type: 'CREATE_PROJECT_ERROR', \n                err\n            });\n        })\n    }\n};","import React, { Component } from 'react';\n// import './App.css';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\n\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from \"./components/dashnoard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SighUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route path=\"/\" component={Dashboard} exact />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>    \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('error'); \n            return {\n                ...state, \n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('success'); \n            return{\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('SIGNOUT_SUCCESS');\n            return state;\n        case 'SIGNIN_SUCCESS':\n            console.log('SIGNIN_SUCCESS');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n        console.log('SIGNUP_ERROR');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n\n        default: \n        return state;\n    }\n};\n\nexport default authReducer;","const initState = {\n    projects: [\n        {id: '1', title: 'help me find shoes', content: 'Something overrated'},\n        {id: '2', title: 'you will not get desert', content: 'Absolutely radicullous'},\n        {id: '3', title: 'eggs are good', content: 'Something stupid'}\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type){\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return state;\n        default: \n            return state;\n    }\n};\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyCM-HWNg7aGGHdTpcXb7om-_YztOY_2eJU\",\n    authDomain: \"planner-8958b.firebaseapp.com\",\n    databaseURL: \"https://planner-8958b.firebaseio.com\",\n    projectId: \"planner-8958b\",\n    storageBucket: \"planner-8958b.appspot.com\",\n    messagingSenderId: \"630274180015\"\n  };\n  firebase.initializeApp(config);\n  firebase.firestore(); // uruchomienie firestora i update timestampa       .settings({ timestampsInSnapshots: true})\n\n  export default firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer, \n    compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.register();\n    \n})\n\n"],"sourceRoot":""}